// Generated by view binder compiler. Do not edit!
package com.doubtless.doubtless.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubtless.doubtless.R;
import com.doubtless.doubtless.theming.retro.RetroLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DoubtItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final TextView btnAnswer;

  @NonNull
  public final ImageView btnCancel;

  @NonNull
  public final CardView cvUserImage;

  @NonNull
  public final ImageButton downvoteBtn;

  @NonNull
  public final ImageView ivUserImage;

  @NonNull
  public final LinearLayout parentVotes;

  @NonNull
  public final RetroLayout retroLayout;

  @NonNull
  public final TextView tvDoubtAnswer;

  @NonNull
  public final TextView tvDoubtQuestion;

  @NonNull
  public final TextView tvNameUser;

  @NonNull
  public final TextView tvReputation;

  @NonNull
  public final TextView tvReputationNumber;

  @NonNull
  public final TextView tvTotalAnswers;

  @NonNull
  public final ImageButton upvoteBtn;

  @NonNull
  public final View viewPurpleElement;

  @NonNull
  public final TextView voteCount;

  private DoubtItemBinding(@NonNull LinearLayoutCompat rootView, @NonNull TextView btnAnswer,
      @NonNull ImageView btnCancel, @NonNull CardView cvUserImage, @NonNull ImageButton downvoteBtn,
      @NonNull ImageView ivUserImage, @NonNull LinearLayout parentVotes,
      @NonNull RetroLayout retroLayout, @NonNull TextView tvDoubtAnswer,
      @NonNull TextView tvDoubtQuestion, @NonNull TextView tvNameUser,
      @NonNull TextView tvReputation, @NonNull TextView tvReputationNumber,
      @NonNull TextView tvTotalAnswers, @NonNull ImageButton upvoteBtn,
      @NonNull View viewPurpleElement, @NonNull TextView voteCount) {
    this.rootView = rootView;
    this.btnAnswer = btnAnswer;
    this.btnCancel = btnCancel;
    this.cvUserImage = cvUserImage;
    this.downvoteBtn = downvoteBtn;
    this.ivUserImage = ivUserImage;
    this.parentVotes = parentVotes;
    this.retroLayout = retroLayout;
    this.tvDoubtAnswer = tvDoubtAnswer;
    this.tvDoubtQuestion = tvDoubtQuestion;
    this.tvNameUser = tvNameUser;
    this.tvReputation = tvReputation;
    this.tvReputationNumber = tvReputationNumber;
    this.tvTotalAnswers = tvTotalAnswers;
    this.upvoteBtn = upvoteBtn;
    this.viewPurpleElement = viewPurpleElement;
    this.voteCount = voteCount;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static DoubtItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DoubtItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.doubt_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DoubtItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_answer;
      TextView btnAnswer = ViewBindings.findChildViewById(rootView, id);
      if (btnAnswer == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      ImageView btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.cv_userImage;
      CardView cvUserImage = ViewBindings.findChildViewById(rootView, id);
      if (cvUserImage == null) {
        break missingId;
      }

      id = R.id.downvote_btn;
      ImageButton downvoteBtn = ViewBindings.findChildViewById(rootView, id);
      if (downvoteBtn == null) {
        break missingId;
      }

      id = R.id.iv_user_image;
      ImageView ivUserImage = ViewBindings.findChildViewById(rootView, id);
      if (ivUserImage == null) {
        break missingId;
      }

      id = R.id.parent_votes;
      LinearLayout parentVotes = ViewBindings.findChildViewById(rootView, id);
      if (parentVotes == null) {
        break missingId;
      }

      id = R.id.retroLayout;
      RetroLayout retroLayout = ViewBindings.findChildViewById(rootView, id);
      if (retroLayout == null) {
        break missingId;
      }

      id = R.id.tv_doubt_answer;
      TextView tvDoubtAnswer = ViewBindings.findChildViewById(rootView, id);
      if (tvDoubtAnswer == null) {
        break missingId;
      }

      id = R.id.tv_doubt_question;
      TextView tvDoubtQuestion = ViewBindings.findChildViewById(rootView, id);
      if (tvDoubtQuestion == null) {
        break missingId;
      }

      id = R.id.tv_name_user;
      TextView tvNameUser = ViewBindings.findChildViewById(rootView, id);
      if (tvNameUser == null) {
        break missingId;
      }

      id = R.id.tv_reputation;
      TextView tvReputation = ViewBindings.findChildViewById(rootView, id);
      if (tvReputation == null) {
        break missingId;
      }

      id = R.id.tv_reputation_number;
      TextView tvReputationNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvReputationNumber == null) {
        break missingId;
      }

      id = R.id.tv_total_answers;
      TextView tvTotalAnswers = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalAnswers == null) {
        break missingId;
      }

      id = R.id.upvote_btn;
      ImageButton upvoteBtn = ViewBindings.findChildViewById(rootView, id);
      if (upvoteBtn == null) {
        break missingId;
      }

      id = R.id.view_purple_element;
      View viewPurpleElement = ViewBindings.findChildViewById(rootView, id);
      if (viewPurpleElement == null) {
        break missingId;
      }

      id = R.id.vote_count;
      TextView voteCount = ViewBindings.findChildViewById(rootView, id);
      if (voteCount == null) {
        break missingId;
      }

      return new DoubtItemBinding((LinearLayoutCompat) rootView, btnAnswer, btnCancel, cvUserImage,
          downvoteBtn, ivUserImage, parentVotes, retroLayout, tvDoubtAnswer, tvDoubtQuestion,
          tvNameUser, tvReputation, tvReputationNumber, tvTotalAnswers, upvoteBtn,
          viewPurpleElement, voteCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
