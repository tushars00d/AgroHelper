// Generated by view binder compiler. Do not edit!
package com.doubtless.doubtless.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubtless.doubtless.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutPollsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView authorDoubtTimestamp;

  @NonNull
  public final CheckBox cbDownvote;

  @NonNull
  public final CheckBox cbUpvotes;

  @NonNull
  public final ImageView ivAnswers;

  @NonNull
  public final ImageView ivDp;

  @NonNull
  public final LinearLayout llPolls;

  @NonNull
  public final TextView tvAnswers;

  @NonNull
  public final TextView tvTags;

  @NonNull
  public final TextView tvUsername;

  @NonNull
  public final TextView tvVotes;

  @NonNull
  public final ImageView userBadge;

  @NonNull
  public final TextView userCollege;

  @NonNull
  public final TextView userDoubtHeading;

  @NonNull
  public final TextView userYear;

  private LayoutPollsBinding(@NonNull CardView rootView, @NonNull TextView authorDoubtTimestamp,
      @NonNull CheckBox cbDownvote, @NonNull CheckBox cbUpvotes, @NonNull ImageView ivAnswers,
      @NonNull ImageView ivDp, @NonNull LinearLayout llPolls, @NonNull TextView tvAnswers,
      @NonNull TextView tvTags, @NonNull TextView tvUsername, @NonNull TextView tvVotes,
      @NonNull ImageView userBadge, @NonNull TextView userCollege,
      @NonNull TextView userDoubtHeading, @NonNull TextView userYear) {
    this.rootView = rootView;
    this.authorDoubtTimestamp = authorDoubtTimestamp;
    this.cbDownvote = cbDownvote;
    this.cbUpvotes = cbUpvotes;
    this.ivAnswers = ivAnswers;
    this.ivDp = ivDp;
    this.llPolls = llPolls;
    this.tvAnswers = tvAnswers;
    this.tvTags = tvTags;
    this.tvUsername = tvUsername;
    this.tvVotes = tvVotes;
    this.userBadge = userBadge;
    this.userCollege = userCollege;
    this.userDoubtHeading = userDoubtHeading;
    this.userYear = userYear;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutPollsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutPollsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_polls, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutPollsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author_doubt_timestamp;
      TextView authorDoubtTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (authorDoubtTimestamp == null) {
        break missingId;
      }

      id = R.id.cb_downvote;
      CheckBox cbDownvote = ViewBindings.findChildViewById(rootView, id);
      if (cbDownvote == null) {
        break missingId;
      }

      id = R.id.cb_upvotes;
      CheckBox cbUpvotes = ViewBindings.findChildViewById(rootView, id);
      if (cbUpvotes == null) {
        break missingId;
      }

      id = R.id.iv_answers;
      ImageView ivAnswers = ViewBindings.findChildViewById(rootView, id);
      if (ivAnswers == null) {
        break missingId;
      }

      id = R.id.iv_dp;
      ImageView ivDp = ViewBindings.findChildViewById(rootView, id);
      if (ivDp == null) {
        break missingId;
      }

      id = R.id.ll_polls;
      LinearLayout llPolls = ViewBindings.findChildViewById(rootView, id);
      if (llPolls == null) {
        break missingId;
      }

      id = R.id.tv_answers;
      TextView tvAnswers = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswers == null) {
        break missingId;
      }

      id = R.id.tv_tags;
      TextView tvTags = ViewBindings.findChildViewById(rootView, id);
      if (tvTags == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      id = R.id.tv_votes;
      TextView tvVotes = ViewBindings.findChildViewById(rootView, id);
      if (tvVotes == null) {
        break missingId;
      }

      id = R.id.user_badge;
      ImageView userBadge = ViewBindings.findChildViewById(rootView, id);
      if (userBadge == null) {
        break missingId;
      }

      id = R.id.user_college;
      TextView userCollege = ViewBindings.findChildViewById(rootView, id);
      if (userCollege == null) {
        break missingId;
      }

      id = R.id.user_doubt_heading;
      TextView userDoubtHeading = ViewBindings.findChildViewById(rootView, id);
      if (userDoubtHeading == null) {
        break missingId;
      }

      id = R.id.user_year;
      TextView userYear = ViewBindings.findChildViewById(rootView, id);
      if (userYear == null) {
        break missingId;
      }

      return new LayoutPollsBinding((CardView) rootView, authorDoubtTimestamp, cbDownvote,
          cbUpvotes, ivAnswers, ivDp, llPolls, tvAnswers, tvTags, tvUsername, tvVotes, userBadge,
          userCollege, userDoubtHeading, userYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
