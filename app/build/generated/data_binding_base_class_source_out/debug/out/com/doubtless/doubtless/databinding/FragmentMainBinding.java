// Generated by view binder compiler. Do not edit!
package com.doubtless.doubtless.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubtless.doubtless.R;
import com.doubtless.doubtless.screens.main.bottomNav.BottomNavLayout;
import com.doubtless.doubtless.theming.bottomNav.SoberBottomNavElementLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout bottomNavFragmentContainer;

  @NonNull
  public final View bottomNavSeparation;

  @NonNull
  public final SoberBottomNavElementLayout btmNavCreate;

  @NonNull
  public final SoberBottomNavElementLayout btmNavDashboard;

  @NonNull
  public final SoberBottomNavElementLayout btmNavHome;

  @NonNull
  public final SoberBottomNavElementLayout btmNavNotif;

  @NonNull
  public final BottomNavLayout retroBottomNav;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout bottomNavFragmentContainer, @NonNull View bottomNavSeparation,
      @NonNull SoberBottomNavElementLayout btmNavCreate,
      @NonNull SoberBottomNavElementLayout btmNavDashboard,
      @NonNull SoberBottomNavElementLayout btmNavHome,
      @NonNull SoberBottomNavElementLayout btmNavNotif, @NonNull BottomNavLayout retroBottomNav) {
    this.rootView = rootView;
    this.bottomNavFragmentContainer = bottomNavFragmentContainer;
    this.bottomNavSeparation = bottomNavSeparation;
    this.btmNavCreate = btmNavCreate;
    this.btmNavDashboard = btmNavDashboard;
    this.btmNavHome = btmNavHome;
    this.btmNavNotif = btmNavNotif;
    this.retroBottomNav = retroBottomNav;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_nav_fragment_container;
      FrameLayout bottomNavFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavFragmentContainer == null) {
        break missingId;
      }

      id = R.id.bottom_nav_separation;
      View bottomNavSeparation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavSeparation == null) {
        break missingId;
      }

      id = R.id.btm_nav_create;
      SoberBottomNavElementLayout btmNavCreate = ViewBindings.findChildViewById(rootView, id);
      if (btmNavCreate == null) {
        break missingId;
      }

      id = R.id.btm_nav_dashboard;
      SoberBottomNavElementLayout btmNavDashboard = ViewBindings.findChildViewById(rootView, id);
      if (btmNavDashboard == null) {
        break missingId;
      }

      id = R.id.btm_nav_home;
      SoberBottomNavElementLayout btmNavHome = ViewBindings.findChildViewById(rootView, id);
      if (btmNavHome == null) {
        break missingId;
      }

      id = R.id.btm_nav_notif;
      SoberBottomNavElementLayout btmNavNotif = ViewBindings.findChildViewById(rootView, id);
      if (btmNavNotif == null) {
        break missingId;
      }

      id = R.id.retro_bottom_nav;
      BottomNavLayout retroBottomNav = ViewBindings.findChildViewById(rootView, id);
      if (retroBottomNav == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, bottomNavFragmentContainer,
          bottomNavSeparation, btmNavCreate, btmNavDashboard, btmNavHome, btmNavNotif,
          retroBottomNav);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
